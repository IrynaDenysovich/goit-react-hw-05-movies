{"version":3,"file":"static/js/633.e5427dfc.chunk.js","mappings":"mTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAY,mCAELC,EAAW,mCAAG,WAAOC,EAAOC,GAAd,uFACFJ,EAAAA,EAAAA,IAAU,gBAAiB,CAChDK,OAAQ,CACNF,MAAOA,EACPG,QAASL,EACTG,KAAMA,KALe,cACnBG,EADmB,yBASlBA,EAASC,KAAKC,SATI,2CAAH,wDAYXC,EAAa,mCAAG,oGACJV,EAAAA,EAAAA,IAAU,sBAAuB,CACtDK,OAAQ,CACNC,QAASL,KAHc,cACrBM,EADqB,yBAOpBA,EAASC,KAAKC,SAPM,2CAAH,qDAUbE,EAAU,mCAAG,WAAMC,GAAN,uFACDZ,EAAAA,EAAAA,IAAA,iBAAoBY,GAAW,CACpDP,OAAQ,CACNC,QAASL,KAHW,cAClBM,EADkB,yBAOjBA,EAASC,MAPQ,2CAAH,sDAUVK,EAAiB,mCAAG,WAAMD,GAAN,uFACRZ,EAAAA,EAAAA,IAAA,iBAAoBY,EAApB,YAAuC,CAC5DP,OAAQ,CACNC,QAASL,KAHkB,cACzBM,EADyB,yBAOxBA,EAASC,KAAKM,MAPU,2CAAH,sDAUjBC,EAAiB,mCAAG,WAAMH,GAAN,uFACRZ,EAAAA,EAAAA,IAAA,iBAAoBY,EAApB,YAAuC,CAC5DP,OAAQ,CACNC,QAASL,KAHkB,cACzBM,EADyB,yBAOxBA,EAASC,KAAKC,SAPU,2CAAH,qD,sLC7CjBO,EAAmBC,EAAAA,GAAAA,IAAH,mFAMhBC,EAAYD,EAAAA,GAAAA,IAAH,uFAMTE,EAAmBF,EAAAA,GAAAA,IAAH,8EAKhBG,EAAgBH,EAAAA,GAAAA,IAAH,+CAIbI,EAAOJ,EAAAA,GAAAA,GAAH,+FAMJK,EAAWL,EAAAA,GAAAA,GAAH,iDAIRM,EAAWN,EAAAA,GAAAA,GAAH,8C,SCpBfO,GAAWC,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IAkEtB,EAhEsB,WAAO,IAAD,IAClBC,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAA0CE,EAAAA,EAAAA,YAA1C,eAAOC,EAAP,KAAsBC,EAAtB,KAEMC,EAAW,qBADAC,EAAAA,EAAAA,MACYC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAEtCC,GAAWC,EAAAA,EAAAA,QAAOL,GAexB,IAbAM,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEgC1B,EAAAA,EAAAA,IAAWe,GAF3C,OAEUG,EAFV,OAGIC,EAAiBD,GAHrB,gDAKIS,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBAUdC,EACD,GAAE,CAACd,IAEAG,EAAe,CACjB,IAAQY,EACNZ,EADMY,MAAOC,EACbb,EADaa,aAAcC,EAC3Bd,EAD2Bc,SAAUC,EACrCf,EADqCe,aAAcC,EACnDhB,EADmDgB,OAE/CC,EACJ,kDAFAjB,EAD2DkB,YAIvDC,EAAaH,EAAOI,KAAI,YAC5B,OAD0C,EAAXC,IAEhC,IACD,OACE,SAAClC,EAAD,WACE,UAAC,EAAAmC,SAAD,CAAUC,UAAU,wCAApB,WACE,SAAC5B,EAAD,CAAU6B,GAAIlB,EAASmB,QAAvB,6BACA,UAACnC,EAAD,YACE,SAACD,EAAD,CAAWqC,IAAKT,EAAWU,IAAI,MAC/B,UAACpC,EAAD,YACE,0BACGqB,EADH,IACWC,EAAae,MAAM,EAAG,GADjC,QAGA,yCAAgC,GAAfb,GAAmBc,QAAQ,GAA5C,QACA,sCACA,uBAAIf,KACJ,qCACA,uBAAIK,EAAWW,KAAK,cAGxB,SAACpC,EAAD,sCACA,UAACF,EAAD,YACE,SAACC,EAAD,WACE,SAAC,KAAD,CAAM+B,GAAG,OAAT,qBAEF,SAAC/B,EAAD,WACE,SAAC,KAAD,CAAM+B,GAAG,UAAT,2BAGJ,SAAC,KAAD,QAIP,CACC,OAAO,4CAEV,C","sources":["components/API.js","components/Pages/MoviesDetails/MoviesDetails.styled.js","components/Pages/MoviesDetails/MoviesDetails.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst commonKey = 'f42f2f62d598d39d316744d8859de3e9';\n\nexport const fetchSearch = async (query, page) => {\n  const response = await axios.get('/search/movie', {\n    params: {\n      query: query,\n      api_key: commonKey,\n      page: page,\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const fetchTrending = async () => {\n  const response = await axios.get('/trending/movie/day', {\n    params: {\n      api_key: commonKey,\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const fetchMovie = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`, {\n    params: {\n      api_key: commonKey,\n    },\n  });\n\n  return response.data;\n};\n\nexport const fetchMovieCredits = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: commonKey,\n    },\n  });\n\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: commonKey,\n    },\n  });\n\n  return response.data.results;\n};\n","import styled from 'styled-components';\n\nexport const DetailsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\nexport const ImgPoster = styled.img`\n  width: 300px;\n  margin-bottom: 15px;\n  margin-left: 15px;\n`;\n\nexport const MovieDetailsInfo = styled.div`\n  display: flex;\n  box-shadow: 0 4px 6px -6px #222;\n`;\n\nexport const ContainerInfo = styled.div`\n  padding-left: 15px;\n`;\n\nexport const List = styled.ul`\n  margin: 0;\n  box-shadow: 0 4px 6px -6px #222;\n  list-style: none;\n`;\n\nexport const ListLink = styled.li`\n  padding-bottom: 15px;\n`;\n\nexport const Addition = styled.h3`\n  margin-left: 15px;\n`;\n","import { lazy, useEffect, useRef, useState, Suspense } from 'react';\nimport { Outlet, Link, useLocation, useParams } from 'react-router-dom';\nimport { fetchMovie } from '../../API';\nimport {\n  DetailsContainer,\n  ImgPoster,\n  MovieDetailsInfo,\n  ContainerInfo,\n  ListLink,\n  List,\n  Addition,\n} from './MoviesDetails.styled';\n\nconst BackLink = lazy(() => import('../../BackLink/BackLink'));\n\nconst MoviesDetails = () => {\n  const { moviesId } = useParams();\n  const [moviesDetails, setMoviesDetails] = useState();\n  const location = useLocation();\n  const backRefLink = location.state?.from ?? '/';\n\n  const refState = useRef(backRefLink);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const moviesDetails = await fetchMovie(moviesId);\n        setMoviesDetails(moviesDetails);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchData();\n  }, [moviesId]);\n\n  if (moviesDetails) {\n    const { title, release_date, overview, vote_average, genres, poster_path } =\n      moviesDetails;\n    const posterUrl =\n      'https://image.tmdb.org/t/p/w300_and_h450_bestv2' + poster_path;\n    const genersName = genres.map(({ name }) => {\n      return name;\n    });\n    return (\n      <DetailsContainer>\n        <Suspense fallback={<div>Loading...</div>}>\n          <BackLink to={refState.current}>&#8592; Go back</BackLink>\n          <MovieDetailsInfo>\n            <ImgPoster src={posterUrl} alt=\"\"></ImgPoster>\n            <ContainerInfo>\n              <h2>\n                {title}({release_date.slice(0, 4)})\n              </h2>\n              <p>User Score: {(vote_average * 10).toFixed(0)}%</p>\n              <h3>Overview</h3>\n              <p>{overview}</p>\n              <h3>Genres </h3>\n              <p>{genersName.join(' ')}</p>\n            </ContainerInfo>\n          </MovieDetailsInfo>\n          <Addition>Additional information</Addition>\n          <List>\n            <ListLink>\n              <Link to=\"cast\">Cast</Link>\n            </ListLink>\n            <ListLink>\n              <Link to=\"reviews\">Rewievs</Link>\n            </ListLink>\n          </List>\n          <Outlet />\n        </Suspense>\n      </DetailsContainer>\n    );\n  } else {\n    return <>loading...</>;\n  }\n};\n\nexport default MoviesDetails;\n"],"names":["axios","commonKey","fetchSearch","query","page","params","api_key","response","data","results","fetchTrending","fetchMovie","movieId","fetchMovieCredits","cast","fetchMovieReviews","DetailsContainer","styled","ImgPoster","MovieDetailsInfo","ContainerInfo","List","ListLink","Addition","BackLink","lazy","moviesId","useParams","useState","moviesDetails","setMoviesDetails","backRefLink","useLocation","state","from","refState","useRef","useEffect","console","log","fetchData","title","release_date","overview","vote_average","genres","posterUrl","poster_path","genersName","map","name","Suspense","fallback","to","current","src","alt","slice","toFixed","join"],"sourceRoot":""}